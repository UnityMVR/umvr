<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<# 
	// expects GenerationParams.GeneratedProperty prop
	// expects GenerationParams.GenSettings settings
#>
<#if (prop.DoNotInitialize && prop.CustomImplementation)
	{
		//do nothing
#>
			// <#= prop.Name #> not initialized because of custom implementation & do not initialize flag
<#
	}
	else if (prop.IsCommand || prop.IsReadonly)
	{
#>
			<#= prop.Name #> = <#= prop.FieldName.Substring(1) #>;
<#
		if (prop.CascadeDisposeUpstream)
		{
			settings.Vars["eventDirection"] = "+";
#>
			<#@ include file="DisposeUpstream.ttinclude"#>
<#
		}
	}
	else
	{
#>
<#
		if (prop.CustomImplementation == false)
		{
#>
			<#= prop.FieldName #> = new <#= prop.IsModel ? "Model" : "" #><#= prop.IsCollection ? "Collection" : "Single" #>Property<<#= prop.Type #>>(nameof(<#= prop.Name #>)<#= prop.IsCollection && prop.InitializeExplicitly ? $", {prop.FieldName.Substring(1)}" : ""#>);
<#
		}

		if (prop.IsCollection == false)
		{
#>
			<#= prop.Name #> = <#= prop.InitializeExplicitly ? prop.FieldName.Substring(1) : "default" #>;
<#
		}
		else if (prop.CustomImplementation)
		{
			if (prop.InitializeExplicitly)
			{
#>
			foreach (var item in <#= prop.FieldName.Substring(1) #>)
			{
				<#= prop.Name #>.Add(item);
			}
<#
			}
			else if (prop.DoNotInitialize == false)
			{
#>
			// <#= prop.Name #> not initialized because of custom collection implementation & default initialization
<#
			}
		}
	} 
			if (prop.CascadeDisposeDownstream)
{
#>
			Disposing += _ => <#= prop.Name #>?.Dispose();
<#}#>
